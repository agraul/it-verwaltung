{"version":3,"sources":["webpack:///./src/app/config/config-device-type/config-device-type.component.html","webpack:///./src/app/config/config-device-type/config-device-type.component.less","webpack:///./src/app/config/config-device-type/config-device-type.component.ts","webpack:///./src/app/config/config-overview/config-overview.component.html","webpack:///./src/app/config/config-overview/config-overview.component.less","webpack:///./src/app/config/config-overview/config-overview.component.ts","webpack:///./src/app/config/config-routing.module.ts","webpack:///./src/app/config/config-supplier/config-supplier.component.html","webpack:///./src/app/config/config-supplier/config-supplier.component.less","webpack:///./src/app/config/config-supplier/config-supplier.component.ts","webpack:///./src/app/config/config-user/config-user.component.html","webpack:///./src/app/config/config-user/config-user.component.less","webpack:///./src/app/config/config-user/config-user.component.ts","webpack:///./src/app/config/config.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/fe-entities/deliverer.entity.ts"],"names":[],"mappings":"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","file":"config-config-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <h6>Komponentenart</h6>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <h6>Komponentenattribute</h6>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n  </div>\\n</div>\\n<div class=\\\"row row-height\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let type of sortedDeviceTypes(); let i = index;\\\" (click)=\\\"setTypeActive(i)\\\"\\n        [ngClass]=\\\"{'active': activeType == i}\\\">{{ type.bezeichnung }}</li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let attribute of sortedDeviceAttributes(); let i = index;\\\"\\n        (click)=\\\"toggleDeviceAttribute(i)\\\" [ngClass]=\\\"{'active': checkDeviceAttributeActive(i)}\\\">\\n        {{ attribute.bezeichnung }}<button class=\\\"float-right\\\" *ngIf=\\\"!checkAttributeDeleteable(i)\\\"\\n          (click)=\\\"deleteDeviceAttribute(i);$event.stopPropagation();\\\" id=\\\"delete-attribute\\\">x</button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"form-check\\\">\\n      <input *ngIf=\\\"deviceTypes.length > 0 && deviceAttributes.length > 0\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n        [(ngModel)]=\\\"deviceTypes[activeType].is_software\\\" id=\\\"isSoftware\\\"><label class=\\\"form-check-label\\\"\\n        for=\\\"isSoftware\\\">Software</label>\\n    </div>\\n    <div>\\n      <button id=\\\"btn-save\\\" (click)=\\\"saveDeviceType()\\\">Speichern</button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-3\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"new-device-type\\\" [formControl]=\\\"newDeviceType\\\"\\n          placeholder=\\\"Neuer Typ\\\">\\n      </div>\\n      <div class=\\\"col-1\\\">\\n        <button (click)=\\\"addNewDeviceType()\\\" id=\\\"add-new-type\\\">+</button>\\n      </div>\\n      <div class=\\\"col-3\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"new-attribute\\\" [formControl]=\\\"newDeviceAttribute\\\"\\n          placeholder=\\\"Neues Attribute\\\">\\n      </div>\\n      <div class=\\\"col-1\\\">\\n        <button [disabled]=\\\"!checkDuplicateDeviceAttribute()\\\" (click)=\\\"addNewDeviceAttribute()\\\"\\n          id=\\\"add-new-attribute\\\">+</button>\\n      </div>\\n      <div class=\\\"col-3\\\">\\n        <button id=\\\"delete-type\\\" (click)=\\\"deleteDeviceType()\\\">Löschen</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"#btn-save {\\n  margin-top: 100%;\\n  margin-bottom: 5%;\\n}\\n.row-height {\\n  height: 420px;\\n}\\nul {\\n  max-height: 400px;\\n  overflow: hidden;\\n  overflow-y: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpc3RvcGhlcndpdHpsL0RvY3VtZW50cy9FbnR3aWNrbHVuZy9Bbmd1bGFyIFdvcmtzcGFjZS9pdC12ZXJ3YWx0dW5nL2Zyb250ZW5kL3NyYy9hcHAvY29uZmlnL2NvbmZpZy1kZXZpY2UtdHlwZS9jb25maWctZGV2aWNlLXR5cGUuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2NvbmZpZy9jb25maWctZGV2aWNlLXR5cGUvY29uZmlnLWRldmljZS10eXBlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQ0NGO0FERUE7RUFDRSxhQUFBO0FDQUY7QURHQTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0RGIiwiZmlsZSI6InNyYy9hcHAvY29uZmlnL2NvbmZpZy1kZXZpY2UtdHlwZS9jb25maWctZGV2aWNlLXR5cGUuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYnRuLXNhdmUge1xuICBtYXJnaW4tdG9wOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA1JTtcbn1cblxuLnJvdy1oZWlnaHQge1xuICBoZWlnaHQ6IDQyMHB4O1xufVxuXG51bCB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuIiwiI2J0bi1zYXZlIHtcbiAgbWFyZ2luLXRvcDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogNSU7XG59XG4ucm93LWhlaWdodCB7XG4gIGhlaWdodDogNDIwcHg7XG59XG51bCB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DeviceType } from 'src/app/fe-entities/device-type.entity';\n\nimport { ApiClientService } from '../../core/api-client.service';\nimport { DeviceAttribute } from '../../fe-entities/device-attibute.entity';\n\n@Component({\n  selector: 'app-config-device-type',\n  templateUrl: './config-device-type.component.html',\n  styleUrls: ['./config-device-type.component.less']\n})\nexport class ConfigDeviceTypeComponent implements OnInit {\n\n  public deviceTypes: DeviceType[] = [];\n\n  public deviceAttributes: DeviceAttribute[] = [];\n\n  public activeType = 0;\n\n  public newDeviceType = new FormControl('');\n\n  public newDeviceAttribute = new FormControl('');\n\n  constructor(private api: ApiClientService) { }\n\n  ngOnInit() {\n    this.api.getAllComponentAttributes().then(resp => this.deviceAttributes = resp);\n    this.api.getAllComponentType().then(resp => this.deviceTypes = resp);\n  }\n\n  /**\n   * Sets selected deviceType active.\n   * Therefor the index of the selected type is safed\n   * and value of the software flag is set.\n   * @param index of selected deviceType list item\n   */\n  public setTypeActive(index: number): void {\n    this.activeType = index;\n  }\n\n  /**\n   * Adds or removes the id of the clicked attribute from the active deviceType.\n   * @param index of selected attribute list item\n   */\n  public toggleDeviceAttribute(index: number): void {\n    const attribute = this.deviceAttributes[index];\n    if (attribute) {\n      const id = attribute.id;\n      if (this.deviceTypes[this.activeType].attribute.find(attr => attr.id === id) === undefined) {\n        this.deviceTypes[this.activeType].attribute.push(attribute);\n      } else {\n        const found = this.deviceTypes[this.activeType].attribute.findIndex(attr => attr.id === id);\n        this.deviceTypes[this.activeType].attribute.splice(found, 1);\n      }\n    }\n  }\n\n  /**\n   * Checks if the current deviceType has the passed attribute set.\n   * @param index of current attibute list item\n   * @returns <code>true</code> if deviceType has attribute set else <code>false</code>\n   */\n  public checkDeviceAttributeActive(index: number): boolean {\n    const attribute = this.deviceAttributes[index];\n    const deviceType = this.deviceTypes[this.activeType];\n    let retVal = false;\n    if (attribute && deviceType) {\n      const id = attribute.id;\n      retVal = deviceType.attribute.find(attr => attr.id === id) !== undefined;\n    }\n    return retVal;\n  }\n\n  /**\n   * Adds a new deviceType to the list.\n   * This deviceType will only be persisted when be saved by btn click.\n   */\n  public addNewDeviceType(): void {\n    this.deviceTypes.push(\n      {\n        id: null,\n        bezeichnung: this.newDeviceType.value,\n        attribute: [],\n        is_software: false\n      }\n    );\n    this.newDeviceType.setValue('');\n  }\n\n  /**\n   * Adds a new deviceAttribute to the list.\n   * Directly saved in database.\n   */\n  public addNewDeviceAttribute(): void {\n    this.api.addComponentAttribute(this.newDeviceAttribute.value).then(() => {\n      this.api.getAllComponentAttributes().then(resp => this.deviceAttributes = resp);\n      this.newDeviceAttribute.setValue('');\n    }\n    );\n  }\n\n  /**\n   * Checks if the current new deviceAttribute exits already.\n   * @returns <code>true</code> when already exits else <code>false</code>\n   */\n  public checkDuplicateDeviceAttribute(): boolean {\n    return this.deviceAttributes.find(attr => attr.bezeichnung === this.newDeviceAttribute.value) === undefined;\n  }\n\n  /**\n   * Saves the current deviceType.\n   */\n  public saveDeviceType(): void {\n    const currentDevice = this.deviceTypes[this.activeType];\n    currentDevice.attribute = currentDevice.attribute.filter(attr => this.deviceAttributes.some(dattr => dattr.id === attr.id));\n    if (!currentDevice.id) {\n      this.api.addNewComponentType(currentDevice).then(() => this.api.getAllComponentType().then(resp => this.deviceTypes = resp));\n    } else {\n      this.api.updateComponentType(currentDevice).then();\n    }\n  }\n\n  /**\n   * Deletes the current deviceType\n   */\n  public deleteDeviceType(): void {\n    this.api.deleteComponentType(this.deviceTypes[this.activeType].id).then(() => {\n      this.api.getAllComponentType().then(resp => {\n        this.deviceTypes = resp;\n        this.activeType = 0;\n      });\n    });\n  }\n\n  /**\n   * Checks if the passed attribute is deleteable.\n   * Therefor it can not be used by a deviceType.\n   * @param index of current device attribute\n   * @returns <code>true</code> if attribute is not used else <code>false</code>\n   */\n  public checkAttributeDeleteable(index: number): boolean {\n    const attribute = this.deviceAttributes[index];\n    let retVal = false;\n    if (attribute) {\n      retVal = this.deviceTypes.find(type => type.attribute.find(attr => attribute.id === attr.id) !== undefined) !== undefined;\n    }\n    return retVal;\n  }\n\n  /**\n   * Deletes the passed device attribute.\n   * @param index of selected device attribute\n   */\n  public deleteDeviceAttribute(index: number): void {\n    this.api.deleteComponentAttribute(this.deviceAttributes[index].id).then(() =>\n      this.api.getAllComponentAttributes().then(resp => this.deviceAttributes = resp)\n    );\n  }\n\n\n  /**\n   * Sorts the deviceType array alphabetically and returns it.\n   */\n  public sortedDeviceTypes(): DeviceType[] {\n    return this.deviceTypes.sort((a, b) => a.bezeichnung.localeCompare(b.bezeichnung));\n  }\n\n  /**\n   * Sorts the deviceAttribute array alphabetically and returns it.\n   */\n  public sortedDeviceAttributes(): DeviceAttribute[] {\n    return this.deviceAttributes.sort((a, b) => a.bezeichnung.localeCompare(b.bezeichnung));\n  }\n\n}\n","module.exports = \"<input type=\\\"button\\\" id=\\\"configUser\\\" value=\\\"Benutzer verwalten\\\" class=\\\"button\\\" routerLink=\\\"/masterdata/user\\\">\\n<input type=\\\"button\\\" id=\\\"configSupplier\\\" value=\\\"Lieferanten verwalten\\\" class=\\\"button\\\" routerLink=\\\"/masterdata/supplier\\\">\\n<input type=\\\"button\\\" id=\\\"configDevice\\\" value=\\\"Komponentenart verwalten\\\" class=\\\"button\\\" routerLink=\\\"/masterdata/devicetype\\\">\"","module.exports = \".button {\\n  margin-right: 15em;\\n  margin-top: 2em;\\n  width: 300px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpc3RvcGhlcndpdHpsL0RvY3VtZW50cy9FbnR3aWNrbHVuZy9Bbmd1bGFyIFdvcmtzcGFjZS9pdC12ZXJ3YWx0dW5nL2Zyb250ZW5kL3NyYy9hcHAvY29uZmlnL2NvbmZpZy1vdmVydmlldy9jb25maWctb3ZlcnZpZXcuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2NvbmZpZy9jb25maWctb3ZlcnZpZXcvY29uZmlnLW92ZXJ2aWV3LmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29uZmlnL2NvbmZpZy1vdmVydmlldy9jb25maWctb3ZlcnZpZXcuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9ue1xuICAgIG1hcmdpbi1yaWdodDogMTVlbTtcbiAgICBtYXJnaW4tdG9wOiAyZW07XG4gICAgd2lkdGg6IDMwMHB4O1xufSIsIi5idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDE1ZW07XG4gIG1hcmdpbi10b3A6IDJlbTtcbiAgd2lkdGg6IDMwMHB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-config-overview',\n  templateUrl: './config-overview.component.html',\n  styleUrls: ['./config-overview.component.less']\n})\nexport class ConfigOverviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigOverviewComponent } from './config-overview/config-overview.component';\nimport { ConfigUserComponent } from './config-user/config-user.component';\nimport { ConfigSupplierComponent } from './config-supplier/config-supplier.component';\nimport { ConfigDeviceTypeComponent } from './config-device-type/config-device-type.component';\n\nconst routes: Routes = [\n  { path: '', component: ConfigOverviewComponent},\n  { path: 'user', component: ConfigUserComponent},\n  { path: 'supplier', component: ConfigSupplierComponent},\n  { path: 'devicetype', component: ConfigDeviceTypeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfigRoutingModule { }\n","module.exports = \"<h6>Lieferantenverwaltung</h6>\\n<form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Firmenname*</th>\\n        <th scope=\\\"col\\\">Straße*</th>\\n        <th scope=\\\"col\\\">PLZ*</th>\\n        <th scope=\\\"col\\\">Ort*</th>\\n        <th scope=\\\"col\\\">Telefon*</th>\\n        <th scope=\\\"col\\\">Mobil</th>\\n        <th scope=\\\"col\\\">Fax</th>\\n        <th scope=\\\"col\\\">Mail</th>\\n        <th scope=\\\"col\\\">Aktion</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let deliverer of this.form.get('deliverers').controls; let i = index\\\" formArrayName=\\\"deliverers\\\">\\n        <ng-container [formGroupName]=\\\"i\\\">\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"fn-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"companyname\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"street-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"street\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"plz-{{i}}\\\" type=\\\"number\\\" formControlName=\\\"plz\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"place-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"place\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"tel-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"tel\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"mobile-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"mobile\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"fax-{{i}}\\\" type=\\\"text\\\" formControlName=\\\"fax\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"mail-{{i}}\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n          </td>\\n          <td>\\n            <button [disabled]=\\\"!form.get('deliverers').controls[i].valid\\\" (click)=saveChange(deliverer)>Ändern</button>\\n            <button (click)=\\\"deleteDeliverer(deliverer.value.id)\\\">Löschen</button>\\n          </td>\\n        </ng-container>\\n      </tr>\\n      <ng-container formGroupName=\\\"addDeliverer\\\">\\n        <tr>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"fn\\\" type=\\\"text\\\" formControlName=\\\"companyname\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"street\\\" type=\\\"text\\\" formControlName=\\\"street\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"plz\\\" type=\\\"number\\\" formControlName=\\\"plz\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"place\\\" type=\\\"text\\\" formControlName=\\\"place\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"tel\\\" type=\\\"text\\\" formControlName=\\\"tel\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"mobile\\\" type=\\\"text\\\" formControlName=\\\"mobile\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"fax\\\" type=\\\"text\\\" formControlName=\\\"fax\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"mail\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n          </td>\\n          <td>\\n            <button [disabled]=\\\"!form.get('addDeliverer').valid\\\" (click)=saveDeliverer()>Speichern</button>\\n          </td>\\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZy9jb25maWctc3VwcGxpZXIvY29uZmlnLXN1cHBsaWVyLmNvbXBvbmVudC5sZXNzIn0= */\"","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApiClientService } from 'src/app/core/api-client.service';\nimport { Deliverer } from 'src/app/fe-entities/deliverer.entity';\n\n@Component({\n  selector: 'app-config-supplier',\n  templateUrl: './config-supplier.component.html',\n  styleUrls: ['./config-supplier.component.less']\n})\nexport class ConfigSupplierComponent implements OnInit {\n  public form: FormGroup;\n\n  constructor(private builder: FormBuilder, private api: ApiClientService) { }\n\n  ngOnInit() {\n    this.reloadTable();\n  }\n\n  private reloadTable(): void {\n    this.api.getAllDeliverer().then(resp => {\n      this.form = this.builder.group({\n        addDeliverer: this.buildDelivererGroup(new Deliverer()),\n        deliverers: this.builder.array(\n          resp\n            .sort((a, b) => a.companyname.localeCompare(b.companyname))\n            .map(del => this.buildDelivererGroup(del))\n        )\n      });\n    });\n  }\n\n  private buildDelivererGroup(del: Deliverer): FormGroup {\n    return this.builder.group({\n      id: del.id,\n      companyname: new FormControl(del.companyname, Validators.required),\n      street: new FormControl(del.street, Validators.required),\n      plz: new FormControl(del.plz, Validators.required),\n      place: new FormControl(del.place, Validators.required),\n      tel: new FormControl(del.tel, Validators.required),\n      mobile: new FormControl(del.mobile, Validators.required),\n      fax: new FormControl(del.fax, Validators.required),\n      email: new FormControl(del.email, Validators.required)\n    });\n  }\n\n  public saveDeliverer(): void {\n    const newDeliverer = this.form.get('addDeliverer').value;\n\n    this.api.addDeliverer(newDeliverer).then(res => {\n      if (!(res instanceof HttpErrorResponse)) {\n        this.reloadTable();\n      }\n    });\n  }\n\n  public saveChange(control: FormGroup): void {\n    this.api.updateDeliverer(control.value).then(() => this.reloadTable());\n  }\n\n  public deleteDeliverer(id: number): void {\n    this.api.deleteDeliverer(id).then(() => this.reloadTable());\n  }\n}\n","module.exports = \"<h6>Benutzerverwaltung</h6>\\n<form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Benutzername</th>\\n        <th scope=\\\"col\\\">Vorname</th>\\n        <th scope=\\\"col\\\">Nachname</th>\\n        <th scope=\\\"col\\\">Rechtegruppe</th>\\n        <th scope=\\\"col\\\">Neues Passwort</th>\\n        <th scope=\\\"col\\\">Aktion</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let user of users; let i = index\\\" formArrayName=\\\"users\\\">\\n        <ng-container [formGroupName]=\\\"i\\\">\\n\\n          <td>{{user.username}}</td>\\n          <td>{{user.firstname}}</td>\\n          <td>{{user.lastname}}</td>\\n          <td><select class=\\\"form-control\\\" id=\\\"role-{{i}}\\\" formControlName=\\\"groupid\\\">\\n              <option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.id\\\">{{ role.bezeichnung }}</option>\\n            </select></td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"pw-{{i}}\\\" type=\\\"password\\\" formControlName=\\\"pw\\\">\\n          </td>\\n          <td>\\n            <button [disabled]=\\\"!form.get('users').controls[i].valid\\\" (click)=saveChange(i)>Ändern</button>\\n            <button (click)=\\\"deleteUser(i)\\\">Löschen</button>\\n          </td>\\n        </ng-container>\\n      </tr>\\n      <ng-container formGroupName=\\\"addUser\\\">\\n        <tr>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"addusername\\\" formControlName=\\\"username\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"addfirstname\\\" formControlName=\\\"firstname\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" id=\\\"addlastname\\\" formControlName=\\\"lastname\\\">\\n          </td>\\n          <td>\\n            <select class=\\\"form-control\\\" id=\\\"addRole\\\" formControlName=\\\"groupid\\\">\\n              <option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.id\\\">{{ role.bezeichnung }}</option>\\n            </select>\\n          </td>\\n          <td>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"addpw\\\" formControlName=\\\"pw\\\">\\n          </td>\\n          <td>\\n            <button [disabled]=\\\"!form.get('addUser').valid\\\" (click)=saveUser()>Speichern</button>\\n          </td>\\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZy9jb25maWctdXNlci9jb25maWctdXNlci5jb21wb25lbnQubGVzcyJ9 */\"","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Roles } from 'src/app/fe-entities/roles.entity';\nimport { User } from 'src/app/fe-entities/user.entity';\n\nimport { ApiClientService } from '../../core/api-client.service';\n\n@Component({\n  selector: 'app-config-user',\n  templateUrl: './config-user.component.html',\n  styleUrls: ['./config-user.component.less']\n})\nexport class ConfigUserComponent implements OnInit {\n\n  public roles: Roles[] = [];\n  public users: User[];\n\n  public form: FormGroup;\n\n  constructor(private builder: FormBuilder, private api: ApiClientService) { }\n\n  async ngOnInit() {\n    this.reloadTable();\n  }\n\n  public saveChange(index: number): void {\n    const changes = (this.form.get('users') as FormArray).controls[index].value;\n    const uid = this.users[index].userid;\n    const pwchange = {\n      id: uid,\n      pw: changes.pw\n    };\n    const rolechange = {\n      id: uid,\n      groupid: changes.groupid\n    };\n\n    if (changes.pw.trim() !== '') {\n      this.api.setUserPassword(pwchange).then();\n    }\n    this.api.setUserGroupChange(rolechange).then();\n  }\n\n  private async reloadTable() {\n    this.api.getAllGroups().subscribe(obs => this.roles = obs.sort((a, b) => a.bezeichnung.localeCompare(b.bezeichnung)));\n    await this.api.getAllUser().then(obs => this.users = obs.sort((a, b) => a.username.localeCompare(b.username)));\n\n    this.form = this.builder.group({\n      addUser: this.builder.group({\n        username: new FormControl('', Validators.required),\n        firstname: new FormControl('', Validators.required),\n        lastname: new FormControl('', Validators.required),\n        groupid: new FormControl(1, Validators.required),\n        pw: new FormControl('', Validators.required),\n      }),\n      users: this.builder.array([])\n    });\n\n    this.users.forEach(user =>\n      (this.form.get('users') as FormArray).push(this.builder.group({\n        groupid: new FormControl(user.groupid, Validators.required),\n        pw: new FormControl(''),\n      })));\n  }\n\n  public deleteUser(index: number): void {\n    this.api.deleteUser(this.users[index].userid).then(() => this.reloadTable());\n  }\n\n  public saveUser(): void {\n    const newUser = this.form.get('addUser').value;\n\n    this.api.registerUser(newUser).then(res => {\n      if (!(res instanceof HttpErrorResponse)) {\n        this.reloadTable();\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\nimport { ConfigDeviceTypeComponent } from './config-device-type/config-device-type.component';\nimport { ConfigOverviewComponent } from './config-overview/config-overview.component';\nimport { ConfigRoutingModule } from './config-routing.module';\nimport { ConfigSupplierComponent } from './config-supplier/config-supplier.component';\nimport { ConfigUserComponent } from './config-user/config-user.component';\n\n@NgModule({\n  declarations: [ConfigOverviewComponent, ConfigUserComponent, ConfigSupplierComponent, ConfigDeviceTypeComponent],\n  imports: [\n    CommonModule,\n    ConfigRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule\n  ]\n})\nexport class ConfigModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiClientService } from './api-client.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [ApiClientService]\n})\nexport class CoreModule { }\n","export class Deliverer {\n\n  public id?: number;\n  public companyname: string;\n  public street: string;\n  public plz: string;\n  public place: string;\n  public tel: string;\n  public mobile: string;\n  public fax: string;\n  public email: string;\n\n}\n"],"sourceRoot":""}