openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: http://example.com/api/v1
    description: Optional server description, e.g. Main (production) server

paths:
  /room/all:
    get:
      summary: WORKS - Liste aller Räume inkl. infos für die Suche
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nr:
                      type: string
                    bezeichnung:
                      type: string
                    hat_notiz:
                      type: boolean
                    komponenten_arten:
                      type: array
                      items:
                        type: string
  /room/detail:
    get:
      summary: WORKS - Get the components of one room & detail of the room
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':    # status code
          description: Ein JSON Array aus Raum Objekten
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nr:
                      type: string
                    bezeichnung:
                      type: string
                    notiz:
                      type: string
                    komponenten:
                      type: object
                      properties:
                        id:
                          type: integer
                        bezeichnung:
                          type: string
                        hersteller:
                          type: string
                        serienundversionsnummer:
                          type: string
                        is_software:
                          type: boolean
  /room/add:
    post:
      summary: WORKS - Add a room
      parameters:
        - in: query
          name: nr
          schema:
            type: string
          required: true
        - in: query
          name: bezeichnung
          schema:
            type: string
          required: true
        - in: query
          name: notiz
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
        '400':
          description: Bad Request
  /room/delete:
    get:
      summary: WORKS - Delete a room
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
        '400':
          description: Bad Request
  /room/edit:
    post:
      summary: WORKS - Edit a room
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: nr
          schema:
            type: string
          required: true
        - in: query
          name: bezeichnung
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
        '400':
          description: Bad Request
  /room/note:
    post:
      summary: WORKS - Modify a room note
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: notiz
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
        '400':
          description: Bad Request


  /component/all:
    get:
      summary: WORKS - Get all components and its attributes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    bezeichnung:
                      type: string
                    raeume_id:
                      type: integer
                    lieferant_id:
                      type: integer
                    einkaufsdatum:
                      type: string
                    gewaehrleistungsdauer:
                      type: integer
                    notiz:
                      type: string
                    hersteller:
                      type: string
                    beleg_id:
                      type: string
                    komponentenartenid:
                      type: integer
                    attribute:
                      type: object
                      properties:
                        id:
                          type: integer
                        value:
                          type: string
          
  /component/delete:
    get:
      summary: MIT LÖSCHWEITERGABE TESTEN - Delete a component
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK

  /componenttype/all:
    get:
      summary: WORKS - Get all componenttypes and their attributes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    bezeichnung:
                      type: string
                    is_software:
                      type: boolean
                    attribute:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          bezeichnung:
                            type: string
  /componenttype/add:
     post:
      summary: WORKS - Add a componenttype
      requestBody:
        content:
          application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bezeichnung:
                      type: string
                    is_software:
                      type: boolean
                    attribute:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          bezeichnung:
                            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sucess:
                      type: boolean
  /componenttype/delete:
     post:
      summary: WORKS - Add a componenttype
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sucess:
                      type: boolean
  /componenttype/addAttribute:
     post:
      summary: WORKS - Add a attribute for a component type
      requestBody:
        content:
          application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    bezeichnung:
                      type: string
                    is_software:
                      type: boolean
                    attribute:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          bezeichnung:
                            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sucess:
                      type: boolean

  /componentattribute/all:
    get:
      summary: WORKS - Get all component attributes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    bezeichnung:
                      type: string
  /componentattribute/add:
    post:
      summary: WORKS - Add a component attribute
      parameters:
        - in: query
          name: attribute
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sucess:
                      type: boolean

  /componentattribute/delete:
    get:
      summary: Works -  Add a component attribute
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sucess:
                      type: boolean
  /user/login:
    post:
      summary: Login user [NOT WORKING]
      parameters:
        - in: query
          name: username
          schema:
            type: string
        - in: query
          name: pw
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
  /user/logout:
    get:
      summary: Logout user [NOT WORKING]
      parameters:
        - in: query
          name: username
          schema:
            type: string
        - in: query
          name: pw
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
  /user/register:
    post:
      summary: WORKS - Register new user, if user is already registered we return a HTTP 409
      parameters:
        - in: query
          name: groupid
          schema:
            type: integer
          required: true
        - in: query
          name: firstname
          schema:
            type: string
          required: true
        - in: query
          name: lastname
          schema:
            type: string
          required: true
        - in: query
          name: username
          schema:
            type: string
          required: true
        - in: query
          name: pw
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean


  /user/delete:
    get:
      summary: WORKS - Delete a user
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /user/setpassword:
    post:
      summary: WORKS - Set a new password for a user
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: pw
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /user/all:
    post:
      summary: WORKS - Get all user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userid:
                      type: integer
                    username:
                      type: string
                    pw:
                      type: string
                    groupid:
                      type: integer
                    vorname:
                      type: string
                    nachname:
                      type: string
  /user/changegroup:
    post:
      summary: WORKS - Set a new group for a user
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: groupid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean

  /group/add:
    post:
      summary: WORKS - Add a new group
      parameters:
        - in: query
          name: bezeichnung
          schema:
            type: string
          required: true
        - in: query
          name: priviligiert
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /group/all:
    get:
      summary: WORKS - Get info of all groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    bezeichnung:
                      type: string
                    priviligiert:
                      type: boolean

  /supplier/all:
    get:
      summary: WORKS - Get all supplier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    companyname:
                      type: string
                    street:
                      type: string
                    plz:
                      type: string
                    place:
                      type: string
                    tel:
                      type: string
                    mobile:
                      type: string
                    fax:
                      type: string
                    email:
                      type: string
  /supplier/delete:
    get:
      summary: WORKS - Delete a supplier by id
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /supplier/add:
    post:
      summary: WORKS - Add a suppler
      parameters:
        - in: query
          name: companyname
          schema:
            type: string
          required: true
        - in: query
          name: street
          schema:
            type: string
          required: true
        - in: query
          name: plz
          schema:
            type: string
          required: true
        - in: query
          name: place
          schema:
            type: string
          required: true
        - in: query
          name: tel
          schema:
            type: string
          required: true
        - in: query
          name: mobile
          schema:
            type: string
          required: true
        - in: query
          name: fax
          schema:
            type: string
          required: true
        - in: query
          name: email
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /supplier/edit:
    post:
      summary:  WORKS - Edit a supplier
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: companyname
          schema:
            type: string
          required: true
        - in: query
          name: street
          schema:
            type: string
          required: true
        - in: query
          name: plz
          schema:
            type: string
          required: true
        - in: query
          name: place
          schema:
            type: string
          required: true
        - in: query
          name: tel
          schema:
            type: string
          required: true
        - in: query
          name: mobile
          schema:
            type: string
          required: true
        - in: query
          name: fax
          schema:
            type: string
          required: true
        - in: query
          name: email
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean

  /software/all:
    get:
      summary:  WORKS - All rooms to a software
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sir_r_id:
                      type: integer
  /software/add:
    post:
      summary:  WORKS - Add software to a room
      parameters:
        - in: query
          name: component_id
          schema:
            type: integer
          required: true
        - in: query
          name: room_id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /software/delete:
    get:
      summary:  WORKS - Delete software to a room
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean

components:
  schemas:
    Raum:
      properties:
        id:
          type: integer
        nr:
          type: string
        bezeichnung:
          type: string
        notiz:
          type: string
      required:
        - id
        - nr
        - bezeichnung
        - notiz


